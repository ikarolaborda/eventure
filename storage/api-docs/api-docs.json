{
    "openapi": "3.0.0",
    "info": {
        "title": "Eventure API",
        "description": "Simple API for Online Event Booking",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000",
            "description": "Local development server"
        }
    ],
    "paths": {
        "/api/auth/login": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logs in a user and returns a JWT token",
                "operationId": "loginUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserLoginRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/auth/logout": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Logs out the authenticated user",
                "operationId": "logoutUser",
                "responses": {
                    "200": {
                        "description": "Logout successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string"
                                        },
                                        "msg": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/refresh": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Refreshes the JWT token",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "access_token": {
                                            "type": "string"
                                        },
                                        "token_type": {
                                            "type": "string"
                                        },
                                        "expires_in": {
                                            "type": "integer"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/auth/register": {
            "post": {
                "tags": [
                    "Auth"
                ],
                "summary": "Registers a new user",
                "operationId": "registerUser",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/UserRegisterRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "user": {
                                            "type": "object"
                                        },
                                        "token": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error"
                    }
                }
            }
        },
        "/api/v1/events": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "List all events",
                "operationId": "listEvents",
                "responses": {
                    "200": {
                        "description": "List of events",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "Events"
                ],
                "summary": "Create a new event",
                "operationId": "createEvent",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/EventStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Event created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events/{id}": {
            "get": {
                "tags": [
                    "Events"
                ],
                "summary": "Show a single event",
                "operationId": "showEvent",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Event details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/v1/reservations": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "List all reservations for the authenticated user",
                "operationId": "listReservations",
                "responses": {
                    "200": {
                        "description": "List of reservations",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "array",
                                    "items": {
                                        "type": "object"
                                    }
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/reservations/{id}": {
            "get": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Show a single reservation for the authenticated user",
                "operationId": "showReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reservation details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Reservation not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "put": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Update a reservation (example, if you implement partial updates)",
                "operationId": "updateReservation",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Reservation ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Reservation updated"
                    },
                    "404": {
                        "description": "Reservation not found"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events/{eventId}/reserve": {
            "post": {
                "tags": [
                    "Reservations"
                ],
                "summary": "Reserve a ticket for a given event",
                "operationId": "createReservation",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReservationStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Reservation successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "422": {
                        "description": "Booking deadline passed or event fully booked or already reserved"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events/{eventId}/reviews/{reviewId}": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Show a single review for a given event",
                "operationId": "showReview",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event or review not found"
                    }
                }
            },
            "put": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Update an existing review",
                "operationId": "updateReview",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewUpdateRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Review updated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "review": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Not the owner of the review"
                    },
                    "404": {
                        "description": "Event or review not found"
                    },
                    "422": {
                        "description": "Validation error"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Delete a review",
                "operationId": "deleteReview",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    },
                    {
                        "name": "reviewId",
                        "in": "path",
                        "description": "Review ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Review deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "403": {
                        "description": "Not the owner of the review"
                    },
                    "404": {
                        "description": "Event or review not found"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/events/{id}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "List all reviews for a specific event",
                "operationId": "listEventReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Event ID",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "A list of reviews with average rating",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "reviews": {
                                            "type": "array",
                                            "items": {
                                                "type": "object"
                                            }
                                        },
                                        "average_rating": {
                                            "type": "number",
                                            "format": "float"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Event not found"
                    }
                }
            }
        },
        "/api/v1/events/{eventId}/reviews": {
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review for an event the user attended",
                "operationId": "createReview",
                "parameters": [
                    {
                        "name": "eventId",
                        "in": "path",
                        "description": "ID of the event to review",
                        "required": true,
                        "schema": {
                            "type": "integer"
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "$ref": "#/components/schemas/ReviewStoreRequest"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "message": {
                                            "type": "string"
                                        },
                                        "review": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Event not found"
                    },
                    "422": {
                        "description": "Validation error or event not ended/user not attended"
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "UserLoginRequest": {
                "required": [
                    "email",
                    "password"
                ],
                "properties": {
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "UserRegisterRequest": {
                "required": [
                    "name",
                    "email",
                    "password"
                ],
                "properties": {
                    "name": {
                        "type": "string"
                    },
                    "email": {
                        "type": "string",
                        "format": "email"
                    },
                    "password": {
                        "type": "string",
                        "format": "password"
                    }
                },
                "type": "object"
            },
            "EventStoreRequest": {
                "description": "Request body for creating an event",
                "required": [
                    "title",
                    "description",
                    "start_date",
                    "end_date",
                    "booking_deadline",
                    "attendee_limit",
                    "price",
                    "location"
                ],
                "properties": {
                    "title": {
                        "description": "Event title",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Event description",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Start date/time of the event, must be in the future",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "description": "End date/time of the event, must be after start_date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "booking_deadline": {
                        "description": "Deadline for booking, must be before start_date",
                        "type": "string",
                        "format": "date-time"
                    },
                    "attendee_limit": {
                        "description": "Maximum number of attendees",
                        "type": "integer",
                        "minimum": 1
                    },
                    "price": {
                        "description": "Price of the event",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "location": {
                        "description": "Location of the event",
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "EventUpdateRequest": {
                "description": "Request body for updating an event. All fields are optional and only validated if present.",
                "properties": {
                    "title": {
                        "description": "Event title",
                        "type": "string",
                        "maxLength": 255
                    },
                    "description": {
                        "description": "Event description",
                        "type": "string"
                    },
                    "start_date": {
                        "description": "Date/time of the event, must be in the future",
                        "type": "string",
                        "format": "date-time"
                    },
                    "end_date": {
                        "description": "End date/time of the event, must be after date_time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "booking_deadline": {
                        "description": "Deadline for booking, must be before date_time",
                        "type": "string",
                        "format": "date-time"
                    },
                    "attendee_limit": {
                        "description": "Maximum number of attendees",
                        "type": "integer",
                        "minimum": 1
                    },
                    "price": {
                        "description": "Price of the event",
                        "type": "number",
                        "format": "float",
                        "minimum": 0
                    },
                    "location": {
                        "description": "Location of the event",
                        "type": "string",
                        "maxLength": 255
                    }
                },
                "type": "object"
            },
            "ReservationStoreRequest": {
                "description": "Request body for creating a reservation. Currently no fields required."
            },
            "ReviewStoreRequest": {
                "description": "Request body for creating a new review",
                "required": [
                    "rating",
                    "comment"
                ],
                "properties": {
                    "rating": {
                        "description": "Rating from 1 to 5",
                        "type": "integer",
                        "format": "int32"
                    },
                    "comment": {
                        "description": "Review comment",
                        "type": "string"
                    }
                },
                "type": "object"
            },
            "ReviewUpdateRequest": {
                "description": "Request body for updating a review. All fields optional, only validated if present.",
                "properties": {
                    "rating": {
                        "description": "Rating from 1 to 5",
                        "type": "integer",
                        "format": "int32",
                        "nullable": true
                    },
                    "comment": {
                        "description": "Review comment",
                        "type": "string",
                        "nullable": true
                    }
                },
                "type": "object"
            }
        },
        "securitySchemes": {
            "bearerAuth": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "security": [
        {
            "bearerAuth": []
        }
    ],
    "tags": [
        {
            "name": "Auth",
            "description": "Auth"
        },
        {
            "name": "Events",
            "description": "Events"
        },
        {
            "name": "Reservations",
            "description": "Reservations"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        }
    ]
}